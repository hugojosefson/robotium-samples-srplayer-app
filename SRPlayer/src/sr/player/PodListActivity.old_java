package sr.player;

import java.util.ArrayList;
import java.util.List;

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;

public class PodListActivity extends ListActivity {
 
        private List<String> Pods = new ArrayList<String>();
        private List<PodcastInfo> PodInfo = new ArrayList<PodcastInfo>();    	
        private int currentPosition = 0;
        private ArrayAdapter<String> PodList; 
        
        public static final int CATEGORIES = 0;	
    	public static final int PROGRAMS = 1;
    	public static final int PROGRAMS_IN_A_CATEGORY = 2;    	
    	public static final String ACTION = "ACTION";
    	private int CurrentAction;
    	private int SelectedCategory = -1;
    	PodcastInfoThread podcastinfothread;
    	private ProgressDialog waitingfordata;
    	    	
    	private String CategoryName;
    	
        @Override
        public void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                setContentView(R.layout.podlist);
             
                Pods.add("");
                
                Intent intent = this.getIntent();
                CurrentAction = intent.getIntExtra(ACTION, 0);
                
                PodList = new ArrayAdapter<String>(this,
                        R.layout.podlistitem, Pods);                
                UpdateList();
                                
                            	
                //Start the PodcastInfoThread
                //podcastinfothread = new PodcastInfoThread(this, CurrentAction, 0);
                //podcastinfothread.start();
                //waitingfordata = ProgressDialog.show(PodListActivity.this,"SR Player","Hämtar lista");
                                	        		
                Button CategoriesButton = (Button) findViewById(R.id.PodCatButton);
                CategoriesButton.setOnClickListener(new View.OnClickListener() {
                	public void onClick(View v) {	
                		
                		podcastinfothread = new PodcastInfoThread(PodListActivity.this, 0, 0);
                        podcastinfothread.start();  
                        waitingfordata = ProgressDialog.show(PodListActivity.this,"SR Player","Hämtar lista");
                        CurrentAction = PodListActivity.CATEGORIES;
                	}
        		});
                
                Button ProgramsButton = (Button) findViewById(R.id.PodProgButton);
                ProgramsButton.setOnClickListener(new View.OnClickListener() {
                	public void onClick(View v) {				
                		
                		
                		PodcastInfoThread podcastinfothread = new PodcastInfoThread(PodListActivity.this, PodListActivity.PROGRAMS, 0);
                        podcastinfothread.start();
                        waitingfordata = ProgressDialog.show(PodListActivity.this,"SR Player","Hämtar lista");
                        CurrentAction = PodListActivity.PROGRAMS;
                	}
        		});
                
                
        
        }
        
        private void UpdateList()
        {
        	setListAdapter(PodList);
        	TextView tv = (TextView) findViewById(R.id.PageLabel);
        	if (CurrentAction == PodListActivity.PROGRAMS)
        	{
        		tv.setText("Program A-Ö");
        	}
        	else if (CurrentAction == PodListActivity.CATEGORIES)
        	{
        		tv.setText("Kategorier");
        	}
        	else
        	{        		                        	
      			tv.setText(CategoryName);
        	}
        	
        }
        
		@Override
        protected void onListItemClick(ListView l, View v, int position, long id) {
                currentPosition = position;        
                if (CurrentAction == PodListActivity.CATEGORIES)
                {
                	//A specific category has been selected. 
                	//Retreive a list of all programs in the category
                	String CategoryId = PodInfo.get(currentPosition).getID();
                	CategoryName = PodInfo.get(currentPosition).getTitle();
            		
            		podcastinfothread = new PodcastInfoThread(PodListActivity.this, PodListActivity.PROGRAMS_IN_A_CATEGORY, Integer.valueOf(CategoryId));
                    podcastinfothread.start();  
                    waitingfordata = ProgressDialog.show(PodListActivity.this,"SR Player","Hämtar lista");
                    CurrentAction = PodListActivity.PROGRAMS_IN_A_CATEGORY;
                }
        }
        
        public void UpdateArray(List<String> PodStringArray, Object PodObject)
        {        
        	if (PodStringArray == null)
        	{
        	Pods.clear();
        	PodInfo.clear();
        	}
        	else
        	{
        	Pods.clear();        		
        	Pods.addAll(PodStringArray); 
        	PodInfo.clear();
        	List<PodcastInfo> NewPodInfo = (List<PodcastInfo>)PodObject;
        	PodInfo.addAll(NewPodInfo);
        	Log.d(SRPlayer.TAG, "New PodInfo receviced. Size = " + String.valueOf(PodInfo.size()));		
			
        	}
        	handler.sendEmptyMessage(0);        	
        };
        
        
        private Handler handler = new Handler() {
            @Override
            public void handleMessage(Message msg) {            		            		                    
                    waitingfordata.dismiss();
                    UpdateList();
            }
    
        };
        
}